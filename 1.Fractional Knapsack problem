#include <stdio.h>

struct Item {
    int weight;
    int profit;
};

void sortByRatio(struct Item items[], int n) {
    for (int i = 0; i < n-1; i++)
        for (int j = i+1; j < n; j++) {
            float r1 = (float)items[i].profit / items[i].weight;
            float r2 = (float)items[j].profit / items[j].weight;
            if (r1 < r2) {
                struct Item temp = items[i];
                items[i] = items[j];
                items[j] = temp;
            }
        }
}

float fractionalKnapsack(struct Item items[], int n, int capacity) {
    sortByRatio(items, n);
    float totalProfit = 0.0;
    for (int i = 0; i < n; i++) {
        if (capacity >= items[i].weight) {
            capacity -= items[i].weight;
            totalProfit += items[i].profit;
        } else {
            totalProfit += items[i].profit * ((float)capacity / items[i].weight);
            break;
        }
    }
    return totalProfit;
}

int main() {
    int n = 3, capacity = 50;
    struct Item items[] = {{10, 60}, {20, 100}, {30, 120}};
    float maxProfit = fractionalKnapsack(items, n, capacity);
    printf("Maximum profit = %.2f\n", maxProfit);
    return 0;
}
output:
Maximum profit = 240.00
