#include <stdio.h>

#define INF 999
int tsp(int g[4][4], int visited[], int pos, int n, int count, int cost, int start) {
    if (count == n && g[pos][start]) {
        return cost + g[pos][start];
    }

    int ans = INF;
    for (int i = 0; i < n; i++) {
        if (!visited[i] && g[pos][i]) {
            visited[i] = 1;
            int temp = tsp(g, visited, i, n, count + 1, cost + g[pos][i], start);
            ans = (temp < ans) ? temp : ans;
            visited[i] = 0;
        }
    }
    return ans;
}

int main() {
    int g[4][4] = {
        {0, 10, 15, 20},
        {10, 0, 35, 25},
        {15, 35, 0, 30},
        {20, 25, 30, 0}
    };
    int visited[4] = {0};
    visited[0] = 1;
    int ans = tsp(g, visited, 0, 4, 1, 0, 0);
    printf("Minimum TSP cost: %d\n", ans);
    return 0;
}
output:
Minimum TSP cost: 80

