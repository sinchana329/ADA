#include <stdio.h>
#include <limits.h>

#define MAX 100
#define INF 999

int cost[MAX][MAX], dist[MAX], visited[MAX], prev[MAX];
int n;

void dijkstra(int src) {
    for (int i = 0; i < n; i++) {
        dist[i] = cost[src][i];
        visited[i] = 0;
        prev[i] = (cost[src][i] != INF && i != src) ? src : -1;
    }

    visited[src] = 1;
    dist[src] = 0;

    for (int count = 1; count < n; count++) {
        int u = -1, min = INF;

        // Find the unvisited vertex with the smallest distance
        for (int i = 0; i < n; i++) {
            if (!visited[i] && dist[i] < min) {
                min = dist[i];
                u = i;
            }
        }

        if (u == -1) break; // All reachable nodes are visited

        visited[u] = 1;

        // Update distances to neighbors
        for (int v = 0; v < n; v++) {
            if (!visited[v] && cost[u][v] != INF && dist[v] > dist[u] + cost[u][v]) {
                dist[v] = dist[u] + cost[u][v];
                prev[v] = u;
            }
        }
    }
}

// Function to print path from source to a vertex
void printPath(int v) {
    if (v == -1) return;
    printPath(prev[v]);
    printf("%d ", v + 1); // Convert 0-based to 1-based index
}

int main() {
    int src;

    printf("Enter the number of vertices: ");
    scanf("%d", &n);

    printf("Enter the cost adjacency matrix (999 for no edge):\n");
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            scanf("%d", &cost[i][j]);

    printf("Enter the source vertex (1 to %d): ", n);
    scanf("%d", &src);
    src--; // Convert to 0-based index

    dijkstra(src);

    printf("\nShortest distances from vertex %d:\n", src + 1);
    for (int i = 0; i < n; i++) {
        printf("%d --> %d = %d\tPath: ", src + 1, i + 1, dist[i]);
        printPath(i);
        printf("\n");
    }

    return 0;
}
output:
Enter the number of vertices: 5
Enter the cost adjacency matrix (999 for no edge):
999 7   3 999 999
7 999   2   5   4
3   2 999   4 999
999 5   4 999   6
999 4 999   6 999
Enter the source vertex (1 to 5): 1


Shortest distances from vertex 1:
1 --> 1 = 0	Path: 1 
1 --> 2 = 5	Path: 1 3 2 
1 --> 3 = 3	Path: 1 3 
1 --> 4 = 7	Path: 1 3 4 
1 --> 5 = 9	Path: 1 3 2 5

